@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@using XI.Portal.Auth.Contract.Constants
@using XI.Portal.Web.Extensions
@model IEnumerable<XI.Portal.Servers.Dto.RconMonitorDto>

@{
    ViewData["Title"] = "Rcon Monitor Index";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <div class="alert alert-primary" role="alert">
        <i class="fa fa-info-circle"></i> This section allows you to manage what servers are monitored through rcon. This is where the portal gets it's player information and processes events.
    </div>

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-content">
                        <table class="table table-responsive w-100 d-block d-md-table">
                            <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameServer)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.MonitorMapRotation)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.MonitorPlayers)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.MonitorPlayerIps)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.LastUpdated)
                                </th>
                                <th></th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.GameTypeIcon(item.GameServer.GameType)
                                        @Html.ServerName(item.GameServer.Title, null)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.MonitorMapRotation)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.MonitorPlayers)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.MonitorPlayerIps)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LastUpdated)
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            @if ((await AuthorizationService.AuthorizeAsync(User, item, AuthPolicies.EditRconMonitor)).Succeeded)
                                            {
                                                <a type="button" class="btn btn-primary" asp-action="Edit" asp-route-id="@item.RconMonitorId"><i class="fa fa-edit"></i> Edit</a>
                                            }

                                            @if ((await AuthorizationService.AuthorizeAsync(User, item, AuthPolicies.ViewRconMonitor)).Succeeded)
                                            {
                                                <a type="button" class="btn btn-primary" asp-action="Details" asp-route-id="@item.RconMonitorId"><i class="fa fa-info-circle"></i> Details</a>
                                            }

                                            @if ((await AuthorizationService.AuthorizeAsync(User, item, AuthPolicies.DeleteRconMonitor)).Succeeded)
                                            {
                                                <a type="button" class="btn btn-danger" asp-action="Delete" asp-route-id="@item.RconMonitorId"><i class="fa fa-trash"></i> Delete</a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                    <div class="ibox-footer">
                        <div class="btn-group btn-group-sm" role="group">
                            <a type="button" class="btn btn-primary" asp-action="Create"><i class="fa fa-plus"></i> Create New</a>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </row>

</div>