@using XI.Portal.Web.Extensions
@model XI.Portal.Web.Controllers.ServersController.ServerIndexViewModel

@{
    ViewData["Title"] = "Game Servers";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-content">
                        <table class="table table-responsive w-100 d-block d-md-table">
                            <thead>
                            <tr>
                                <th>
                                </th>
                                <th>
                                    @Html.Label("Title")
                                </th>
                                <th>
                                    @Html.Label("Hostname")
                                </th>
                                <th></th>
                                <th>
                                    @Html.Label("Players")
                                </th>
                                <th>
                                    @Html.Label("Map")
                                </th>
                                <th>
                                    @Html.Label("Mod")
                                </th>
                                <th></th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in Model.ServerInfoViewModels)
                            {
                                <tr>
                                    <td>
                                        @Html.GameTypeIcon(item.GameServer.GameType)
                                    </td>
                                    <td>
                                        @Html.ServerName(item.GameServer.Title, item.GameServerStatus?.ServerName)
                                    </td>
                                    <td>
                                        @Html.ServerHostAndPort(item.GameServer.Hostname, item.GameServer.QueryPort)

                                    </td>
                                    <td>
                                        @Html.GameTrackerIcon(item.GameServer.Hostname, item.GameServer.QueryPort)
                                        @Html.SteamIcon(item.GameServer.GameType, item.GameServer.Hostname, item.GameServer.QueryPort)
                                        @Html.HlswIcon(item.GameServer.GameType, item.GameServer.Hostname, item.GameServer.QueryPort)
                                    </td>
                                    <td>
                                        @{
                                            double percentage = 0;
                                            if (item.GameServerStatus != null)
                                            {
                                                percentage = (double) item.GameServerStatus.PlayerCount / item.GameServerStatus.MaxPlayers * 100;
                                            }
                                        }

                                        <div class="progress" style="margin-right: 20px">
                                            <div style="width: @percentage%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="@percentage" role="progressbar" class="progress-bar">
                                                <span class="sr-only">@percentage% Slots Filled</span>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @item.GameServerStatus?.Map
                                    </td>
                                    <td>
                                        @item.GameServerStatus?.Mod
                                    </td>
                                    <td>
                                        <a asp-controller="Servers" asp-action="ServerInfo" asp-route-id="@item.GameServer.ServerId">Server Info</a>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </row>

    <div class="row">
        <div class="col-12">

            <div class="ibox">
                <div class="ibox-title">
                    Players Online in the last 24 Hours (@Model.Locations.Count) across all tracked game servers
                </div>

                <div class="ibox-content">
                    <div id="map" style="height: 600px; width: 100%;"></div>
                </div>
            </div>

        </div>
    </div>

</div>

@* ReSharper disable once Razor.SectionNotResolved *@

@section Scripts {
    <script>
        function initMap() {

            var map = new google.maps.Map(document.getElementById('map'),
                {
                    zoom: 2,
                    center: { lat: 0.00, lng: 0.00 }
                });

            var locations = [
                @foreach (var location in Model.Locations.Where(location => location.GeoLocation != null))
                {
                    <text>
                        ['Player', @location.GeoLocation.Latitude, @location.GeoLocation.Longitude, '@location.GameType.ToString()'],
                    </text>
                }
            ];

            for (count = 0; count < locations.length; count++) {
                new google.maps.Marker({
                    position: new google.maps.LatLng(locations[count][1], locations[count][2]),
                    map: map,
                    title: locations[count][0],
                    icon: {
                        url: "/images/game-icons/" + locations[count][3] + ".png"
                    }
                });
            }
        }
    </script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDqX0zqt8PWTqRtk0PA6luVuOJiWSgbiw0&signed_in=false&callback=initMap"></script>
}