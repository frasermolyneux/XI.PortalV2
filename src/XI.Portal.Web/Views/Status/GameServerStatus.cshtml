@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@using XI.Portal.Web.Extensions
@model List<XI.Portal.Servers.Dto.PortalGameServerStatusDto>

@{
    ViewData["Title"] = "Game Server Status";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <div class="alert alert-primary" role="alert">
        <i class="fa fa-info"></i> This confirms that the process that retrieves the player data to display on the servers section of this website is functioning correctly.
    </div>

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-title">
                        @ViewData["Title"]
                    </div>
                    <div class="ibox-content">
                        A server will be considered out of sync if:
                        <ul>
                            <li>The server has not been directly queries within the past 15 minutes</li>
                            <li>The current map cannot be retrieved from the query</li>
                        </ul>
                    </div>
                </div>
            </div>

        </div>
    </row>

    @foreach (var item in Model)
    {
        <row class="row">
            <div class="col-12">

                <div class="container-fluid">
                    <div class="ibox">
                        <div class="ibox-title">
                            <span>
                                @Html.GameTypeIcon(item.GameType) @Html.ServerName(item.ServerName, item.ServerName)
                            </span>
                        </div>
                        <div class="ibox-content">
                            <p>
                                <text>
                                    <strong>Server Hostname: </strong>@item.Hostname
                                </text><br/>
                                <text>
                                    <strong>Last Queried: </strong>@item.Timestamp
                                </text><br/>
                                <text>
                                    <strong>Mod: </strong>@item.Mod
                                </text><br/>
                                <text>
                                    <strong>Map: </strong>@item.Map
                                </text><br/>
                                <text>
                                    <strong>Player Count: </strong>@item.PlayerCount
                                </text>
                                <br/>

                                @if (DateTime.UtcNow.AddMinutes(-15) > item.Timestamp)
                                {
                                    <div class="alert alert-danger">Server has not been queried in the past 15 minutes</div>
                                }
                                else
                                {
                                    <div class="alert alert-success">Everything looks OK, on the surface at least.</div>
                                }

                                @if (string.IsNullOrWhiteSpace(item.Map))
                                {
                                    <div class="alert alert-danger">Map could not be retrieved from the server</div>
                                }
                            </p>
                        </div>
                    </div>
                </div>

            </div>
        </row>
    }
</div>