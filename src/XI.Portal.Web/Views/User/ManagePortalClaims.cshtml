@using XI.Portal.Auth.Contract.Constants
@using XI.Portal.Servers.Dto
@model XI.Portal.Users.Models.UserListEntryViewModel

@{
    ViewData["Title"] = "Manage Portal Claims - " + Model.Username;

    var gameServers = (List<GameServerDto>) ViewData["GameServers"];
}

<div class="wrapper wrapper-content animated fadeInRight">

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-title">
                        @ViewData["Title"]
                    </div>
                    <div class="ibox-content">
                        <dl class="row">
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Username)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Username)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Email)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Email)
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>

        </div>
    </row>

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-title">
                        Active Claims
                    </div>
                    <div class="ibox-content">
                        <table class="table table-responsive w-100 d-block d-md-table">
                            <thead>
                            <tr>
                                <td>Claim Type</td>
                                <td>Claim Value</td>
                                <td></td>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var claim in Model.PortalClaims)
                            {
                                <tr>
                                    <td>@claim.ClaimType</td>
                                    <td>
                                        @{
                                            Guid.TryParse(claim.ClaimValue, out var serverId);
                                            var server = gameServers.FirstOrDefault(s => s.ServerId == serverId);
                                            if (server == null)
                                            {
                                                <text>Invalid Claim</text>
                                            }
                                            else
                                            {
                                                <text>@server.Title</text>
                                            }
                                        }
                                    </td>
                                    <td>
                                        <form class="form-inline" asp-controller="User" asp-action="RemoveUserClaim" method="post">
                                            <input id="id" name="id" type="hidden" value="@Model.Id"/>
                                            <input id="claimId" name="claimId" type="hidden" value="@claim.RowKey"/>
                                            <button type="submit" class="btn btn-link">Remove Claim</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </row>


    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-title">
                        Add Ftp Portal Claim
                    </div>
                    <div class="ibox-content">
                        <form asp-action="AddUserClaim">
                            <input id="id" name="id" type="hidden" value="@Model.Id"/>
                            <input id="claimType" name="claimType" type="hidden" value="@PortalClaimTypes.FtpCredentials"/>
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <select id="claimValue" name="claimValue" class="form-control" asp-items="ViewBag.GameServersSelect"></select>
                            </div>
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary"><i class="fa fa-plus"> Create</i></button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        </div>
    </row>

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-title">
                        Add Rcon Portal Claim
                    </div>
                    <div class="ibox-content">
                        <form asp-action="AddUserClaim">
                            <input id="id" name="id" type="hidden" value="@Model.Id"/>
                            <input id="claimType" name="claimType" type="hidden" value="@PortalClaimTypes.RconCredentials"/>
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <select id="claimValue" name="claimValue" class="form-control" asp-items="ViewBag.GameServersSelect"></select>
                            </div>
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary"><i class="fa fa-plus"> Create</i></button>
                            </div>
                        </form>
                    </div>
                    <div class="ibox-footer">
                        <div class="btn-group btn-group-sm" role="group">
                            <a type="button" class="btn btn-primary" asp-action="Index"><i class="fa fa-arrow-left"></i> Back to List</a>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </row>

</div>

@* ReSharper disable once Razor.SectionNotResolved *@

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}