@{
    ViewData["Title"] = "Users";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <div class="alert alert-primary" role="alert">
        <i class="fa fa-info-circle"></i> To understand how the permissions work and what the additional permissions mean please see the <a href="@Url.ActionLink("Permissions", "User")">Permissions Overview</a>
    </div>

    <row class="row">
        <div class="col-12">

            <div class="container-fluid">
                <div class="ibox">
                    <div class="ibox-title">
                        @ViewData["Title"]
                    </div>
                    <div class="ibox-content">
                        <table id="dataTable">
                            <thead>
                            <tr>
                                <td>Id</td>
                                <td>Username</td>
                                <td>Email</td>
                                <td>Additional Portal Permissions</td>
                                <td></td>
                                <td></td>
                            </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </row>

</div>

@* ReSharper disable once Razor.SectionNotResolved *@

@section Scripts {

    <script type="text/javascript">

        $(document).ready(function() {
            $('#dataTable').DataTable({
                processing: true,
                stateSave: true,
                order: [[1, "asc"]],
                ajax: {
                    url: '/User/GetUsersAjax',
                    dataSrc: 'data'
                },
                columns: [
                    {
                        data: 'id',
                        name: 'id',
                        sortable: true
                    },
                    {
                        data: 'username',
                        name: 'username',
                        sortable: true
                    },
                    {
                        data: 'email',
                        name: 'email',
                        sortable: true
                    },
                    {
                        data: 'portalClaims',
                        name: 'portalClaims',
                        sortable: true,
                        render: function(data, type, row) {
                            var claims = "";

                            for (let i = 0; i < row['portalClaims'].length; i++) {
                                claims = claims + "[" + row['portalClaims'][i].claimType + "],";
                            }

                            return claims.substring(0, claims.length - 1);
                        }
                    },
                    {
                        sortable: false,
                        render: function(data, type, row) {
                            return logOutUserLink(row['id'], '@Html.AntiForgeryToken()');
                        }
                    },
                    {
                        sortable: false,
                        render: function(data, type, row) {
                            return manageClaimsLink(row['id']);
                        }
                    }
                ]
            });
        });

    </script>
}