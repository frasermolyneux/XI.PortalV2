trigger:
  branches:
    include:
    - '*'

variables:
  AzTerraformRegion: 'uksouth'
  AzTerraformResourceGroup: 'XI-Portal-Web-Terraform'
  AzTerraformStorageAccount: 'xiportal'

stages:
- stage: build
  jobs:
  - job: build
    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/t:Publish /p:OutputPath="$(build.artifactStagingDirectory)/webapp-publish"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)' 

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/webapp-publish/*'
        archiveType: 'zip'
        archiveFile: '$(Build.artifactStagingDirectory)/webapp/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: CopyFiles@2
      displayName: 'Copy terraform folder into staging directory'
      inputs: 
        SourceFolder: '$(Build.sourcesDirectory)/terraform'
        Contents: '**'
        TargetFolder: '$(Build.artifactStagingDirectory)/terraform'

    - publish: $(Build.artifactStagingDirectory)/terraform
      displayName: Publish terraform artifact
      artifact: terraform

    - publish: '$(Build.artifactStagingDirectory)/webapp'
      displayName: 'Publish website source artifact'
      artifact: webapp

- stage: pre_deploy
  jobs:
  - job: create_terraform_backend
    pool:
      vmImage: 'windows-latest'

    steps:
    - checkout: none
      displayName: 'Skip checking out source'

    - task: AzureCLI@1
      displayName: 'Create terraform backend in Azure storage'
      inputs:
        azureSubscription: 'XI-Pay-As-You-Go'
        scriptLocation: inlineScript
        inlineScript: |
          call az group create --location "$(AzTerraformRegion)" --name "$(AzTerraformResourceGroup)"
          call az storage account create --name "$(AzTerraformStorageAccount)" --resource-group "$(AzTerraformResourceGroup)" --location "$(AzTerraformRegion)" --sku "Standard_LRS"
          call az storage container create --name "terraform" --account-name "$(AzTerraformStorageAccount)"

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - template: deploy-application.yml
    parameters:
      environment: 'hera'